# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      
      # Setup Node
      - name: Setup Node.js env
        uses: actions/setup-node@v2.1.4
      
      # Install node with cache
      - name: NPM or Yarn install with caching
        uses: bahmutov/npm-install@v1.6.0

      # Build node app
      - name: Build project
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.0.4
        
      - name: Docker Login
        uses: docker/login-action@v1.6.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.2.1
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./Dockerfile
          push: true
          tags: ongdev/od-request-app:0.0.1, ongdev/od-request-app/latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
